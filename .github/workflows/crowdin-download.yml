name: Crowdin download files

# Triggers the workflow every night
on:
  schedule:
    - cron: '0 4 * * *'

  workflow_dispatch:
    inputs:

jobs:
  devDownload:
    name: Crowdin download on dev
    strategy:
      max-parallel: 1
    runs-on: ubuntu-22.04

    steps:
      - name: Extract parameter
        id: init
        run: |
          if [ ${{ github.event_name }} == 'workflow_dispatch' ]
          then
              echo ::set-output name=baseBranch::${GITHUB_REF#refs/*/}
          else
              echo "##[set-output name=baseBranch;]$(echo dev)"
          fi
      - uses: actions/checkout@v2
        with:
          ref: ${{ steps.init.outputs.baseBranch }}
      - name: Config git
        run: |
          git config --local user.email "ui-designer-bot@users.noreply.github.com"
          git config --local user.name "ui-designer-bot"
          git config pull.rebase true
      # Runs Crowdin download
      - name: Run Crowdin download
        run: ./infrastructure/crowdin/download.sh --crowdin-api-key=${{ secrets.CROWDIN_API_KEY }} --github-api-key=${{ secrets.GITHUB_TOKEN }} --branch=${{ steps.init.outputs.baseBranch }}
      - name: Send message to Slack channel
        if: ${{ failure() }}
        uses: slackapi/slack-github-action@v1.17.0
        with:
          channel-id: 'CFD1SMX7V'
          payload: |
            {
              "blocks": [
                  {
                      "type": "section",
                      "text": {
                          "type": "mrkdwn",
                          "text": ":x: Download crowdin translation failed on  ${{github.ref}} in UI-Designer."
                      }
                  },
                  {
                      "type": "section",
                      "text": {
                          "type": "mrkdwn",
                          "text": "More details about the error <https://github.com/${{github.repository}}/actions/runs/${{github.run_id}}?check_suite_focus=true| here>"
                      }
                  }
              ]
            }
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}

